package tanoshiCore;

import cpw.mods.fml.client.registry.RenderingRegistry;
import cpw.mods.fml.common.FMLCommonHandler;
import cpw.mods.fml.common.Mod;
import cpw.mods.fml.common.Mod.EventHandler;
import cpw.mods.fml.common.ModMetadata;
import cpw.mods.fml.common.event.FMLInitializationEvent;
import cpw.mods.fml.common.event.FMLPreInitializationEvent;
import cpw.mods.fml.common.registry.EntityRegistry;
import cpw.mods.fml.common.registry.GameRegistry;
import cpw.mods.fml.relauncher.Side;
import cpw.mods.fml.relauncher.SideOnly;
import item.EntityJapariCoin;
import net.minecraft.block.Block;
import net.minecraft.creativetab.CreativeTabs;
import net.minecraft.entity.EnumCreatureType;
import net.minecraft.world.biome.BiomeGenBase;
import net.minecraftforge.oredict.OreDictionary;
import tanoshiMob.entity.EntityAraiguma;
import tanoshiMob.entity.EntityAraisan;
import tanoshiMob.entity.EntityBoss;
import tanoshiMob.entity.EntityFennec;
import tanoshiMob.entity.EntityFennec_A;
import tanoshiMob.entity.EntityServal;
import tanoshiMob.entity.EntityServal_A;
import tanoshiMob.entity.EntityToki;
import tanoshiMob.entity.EntityToki_A;
import tanoshiMob.entity.EntityTutinoko;
import tanoshiMob.render.RenderAraiguma;
import tanoshiMob.render.RenderAraisan;
import tanoshiMob.render.RenderBoss;
import tanoshiMob.render.RenderFennec;
import tanoshiMob.render.RenderFennec_A;
import tanoshiMob.render.RenderServal;
import tanoshiMob.render.RenderServal_A;
import tanoshiMob.render.RenderToki;
import tanoshiMob.render.RenderToki_A;
import tanoshiMob.render.RenderTutinoko;

@Mod(modid = TanoshiMod.MODID,useMetadata = true, version = TanoshiMod.VERSION)

public class TanoshiMod {

	@Mod.Metadata
	public static ModMetadata modMetadata;
	public static final String MODID = "Tanoshi";
	public static final String VERSION = "0.9.0";
	public static final String MOD_NAME = "TanoshiMod";
	public static final CreativeTabs tabTanoshi = new TanoshiTab("TanoshiTab");
	public final static String proxy_client = "proxy.ProxyClient";
	public final static String proxy_common = "proxy.ProxyCommon";
	public static Block SandStar_tile;
	public static Block SnakeSpecimen;
	public static final String RESOURCE_PREFIX = "tanoshimod"+":";

	private void loadMeta(ModMetadata metadata){
		   metadata.modId = MODID;
		   metadata.name = MOD_NAME;
		   metadata.version = VERSION;
		   metadata.authorList.add("Sclas");
		   metadata.description = "Some Descriptions";
		   metadata.autogenerated = false;
		}

	@EventHandler
	public void preInit(FMLPreInitializationEvent e) {

		loadMeta(modMetadata);
	        //Any Codes

	/*
		 // 弾のエンティティ
		EntityRegistry.registerGlobalEntityID(PsoEntityBullet.class, "photonbullet",
				EntityRegistry.findGlobalUniqueEntityId());
		EntityRegistry.instance();
		EntityRegistry.registerModEntity(PsoEntityBullet.class, "photonbullet", 1, this, 128, 1, true);
		// proxy.registerRenderers();

		EntityRegistry.registerGlobalEntityID(PsoEntityThunder.class, "zonde",
				EntityRegistry.findGlobalUniqueEntityId());
		EntityRegistry.instance();
		EntityRegistry.registerModEntity(PsoEntityThunder.class, "zonde", 2, this, 128, 1, true);
		proxy.registerRenderers();
		proxy2.registerRenderers();
	*/

		EntityRegistry.registerGlobalEntityID(EntityJapariCoin.class, "japari_coin",
				EntityRegistry.findGlobalUniqueEntityId());
		EntityRegistry.instance();
		EntityRegistry.registerModEntity(EntityJapariCoin.class, "japari_coin", 0, this, 128, 1, true);
		proxy.ProxyClient.register_renderers();


    /**
        registerEntity エンティティ登録
        * 1 登録するEntityクラス　* 2 内部Entity名,　* 3 Entity表示名, * 4 EntityID
        EntityIDが0の場合は、Forgeの機能で空いている場所を探して自動的に登録。
    **/

		TanoshiItemCore.registerItem(this);

		//ブロックのインスタンス生成
		SandStar_tile = new tanoshiBlock.SandStar();
		GameRegistry.registerBlock(SandStar_tile, "SandStar_tile");
		OreDictionary.registerOre("SandStar_tile", SandStar_tile);

		SnakeSpecimen = new tanoshiBlock.SnakeSpeciman();
		GameRegistry.registerBlock(SnakeSpecimen,"Snake_Specimen_block");

	}

	@EventHandler
	public void init(FMLInitializationEvent event) {

		EntityRegistry.registerGlobalEntityID(EntityBoss.class, "LuckyBeast",
				EntityRegistry.findGlobalUniqueEntityId());
		EntityRegistry.registerModEntity(EntityBoss.class, "LuckyBeast", 1, this, 250, 1, true);
		if (FMLCommonHandler.instance().getSide() == Side.CLIENT) {
			RenderingRegistry.registerEntityRenderingHandler(EntityBoss.class, new RenderBoss());
		}

		EntityRegistry.registerGlobalEntityID(EntityServal.class, "Serval",
				EntityRegistry.findGlobalUniqueEntityId());
		EntityRegistry.registerModEntity(EntityServal.class, "Serval", 2, this, 250, 1, true);
		if (FMLCommonHandler.instance().getSide() == Side.CLIENT) {
			RenderingRegistry.registerEntityRenderingHandler(EntityServal.class, new RenderServal());
		}
		EntityRegistry.registerGlobalEntityID(EntityServal_A.class, "Serval_A",
				EntityRegistry.findGlobalUniqueEntityId());
		EntityRegistry.registerModEntity(EntityServal_A.class, "Serval_A", 3, this, 250, 1, true);
		if (FMLCommonHandler.instance().getSide() == Side.CLIENT) {
			RenderingRegistry.registerEntityRenderingHandler(EntityServal_A.class, new RenderServal_A());
	        EntityRegistry.addSpawn(EntityServal_A.class, 40, 1, 1, EnumCreatureType.creature, BiomeGenBase.savanna);
		}

		EntityRegistry.registerGlobalEntityID(EntityToki.class, "Toki",
				EntityRegistry.findGlobalUniqueEntityId());
		EntityRegistry.registerModEntity(EntityToki.class, "Toki", 4, this, 250, 1, true);
		if (FMLCommonHandler.instance().getSide() == Side.CLIENT) {
			RenderingRegistry.registerEntityRenderingHandler(EntityToki.class, new RenderToki());
		}

//        VillagerRegistry.instance().registerVillagerId(5);
//        VillagerRegistry.instance().registerVillageTradeHandler(5, new trade.TradeServal());

		EntityRegistry.registerGlobalEntityID(EntityToki_A.class, "Toki_A",
				EntityRegistry.findGlobalUniqueEntityId());
		EntityRegistry.registerModEntity(EntityToki_A.class, "Toki_A", 5, this, 250, 1, true);
		if (FMLCommonHandler.instance().getSide() == Side.CLIENT) {
			RenderingRegistry.registerEntityRenderingHandler(EntityToki_A.class, new RenderToki_A());
	        EntityRegistry.addSpawn(EntityToki_A.class, 40, 1, 1, EnumCreatureType.creature, BiomeGenBase.plains);
	        EntityRegistry.addSpawn(EntityToki_A.class, 40, 1, 1, EnumCreatureType.creature, BiomeGenBase.forest);
		}

		EntityRegistry.registerGlobalEntityID(EntityTutinoko.class, "Tutinoko",
				EntityRegistry.findGlobalUniqueEntityId());
		EntityRegistry.registerModEntity(EntityTutinoko.class, "Tutinoko", 6, this, 250, 1, true);
		if (FMLCommonHandler.instance().getSide() == Side.CLIENT) {
			RenderingRegistry.registerEntityRenderingHandler(EntityTutinoko.class, new RenderTutinoko());
		}

		EntityRegistry.registerGlobalEntityID(EntityAraisan.class, "Araisan",
				EntityRegistry.findGlobalUniqueEntityId());
		EntityRegistry.registerModEntity(EntityAraisan.class, "Araisan", 7, this, 250, 1, true);
		if (FMLCommonHandler.instance().getSide() == Side.CLIENT) {
			RenderingRegistry.registerEntityRenderingHandler(EntityAraisan.class, new RenderAraisan());
		}

		EntityRegistry.registerGlobalEntityID(EntityAraiguma.class, "Araiguma",
				EntityRegistry.findGlobalUniqueEntityId());
		EntityRegistry.registerModEntity(EntityAraiguma.class, "Araiguma", 8, this, 250, 1, true);
		if (FMLCommonHandler.instance().getSide() == Side.CLIENT) {
			RenderingRegistry.registerEntityRenderingHandler(EntityAraiguma.class, new RenderAraiguma());
	        EntityRegistry.addSpawn(EntityAraiguma.class, 40, 1, 1, EnumCreatureType.creature, BiomeGenBase.river);
	        EntityRegistry.addSpawn(EntityAraiguma.class, 40, 1, 1, EnumCreatureType.creature, BiomeGenBase.beach);
		}

		EntityRegistry.registerGlobalEntityID(EntityFennec.class, "Fennec",
				EntityRegistry.findGlobalUniqueEntityId());
		EntityRegistry.registerModEntity(EntityFennec.class, "Fennec", 9, this, 250, 1, true);
		if (FMLCommonHandler.instance().getSide() == Side.CLIENT) {
			RenderingRegistry.registerEntityRenderingHandler(EntityFennec.class, new RenderFennec());
		}

		EntityRegistry.registerGlobalEntityID(EntityFennec_A.class, "Fennec_A",
				EntityRegistry.findGlobalUniqueEntityId());
		EntityRegistry.registerModEntity(EntityFennec_A.class, "Fennec_A", 10, this, 250, 1, true);
		if (FMLCommonHandler.instance().getSide() == Side.CLIENT) {
			RenderingRegistry.registerEntityRenderingHandler(EntityFennec_A.class, new RenderFennec_A());
	        EntityRegistry.addSpawn(EntityFennec_A.class, 40, 1, 1, EnumCreatureType.creature, BiomeGenBase.desert);
	        EntityRegistry.addSpawn(EntityFennec_A.class, 40, 1, 1, EnumCreatureType.creature, BiomeGenBase.desertHills);
		}


		GameRegistry.registerWorldGenerator(new SandStarGenerator(), 0);

		TanoshiRecipeCore.registerRecipe();

    	proxy.ProxyClient.register_renderers();
	}
	@SideOnly(Side.CLIENT)
	public void render(){
		RenderingRegistry.registerEntityRenderingHandler(EntityServal.class, new RenderServal());
		RenderingRegistry.registerEntityRenderingHandler(EntityBoss.class, new RenderBoss());
	}

}